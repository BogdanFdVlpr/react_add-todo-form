{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","findUser","userId","usersFromServer","find","App","useState","newTodos","setNewToDos","valueTitle","setValueTitle","indexSelectName","setIndexSelectName","checkChooseTitle","setCheckChooseTitle","checkChooseUser","setCheckChooseUser","maxId","reduce","acc","curr","action","method","onSubmit","event","preventDefault","length","newUser","htmlFor","type","placeholder","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3944b6ea.chunk.js","sourcesContent":["import React from 'react';\nimport { Users } from '../../types/Users';\n\ntype Props = {\n  user: Users;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todos } from '../../types/Todos';\n\ntype Style = {\n  todo: Todos;\n};\n\nexport const TodoInfo: React.FC<Style> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <>\n      <article\n        data-id={id}\n        // className=\"TodoInfo TodoInfo--completed\"\n        className={classNames('TodoInfo', {\n          'TodoInfo--completed': completed,\n        })}\n      >\n        <h2 className=\"TodoInfo__title\">\n          {title}\n        </h2>\n\n        {user && (\n          <UserInfo user={user} />\n        )}\n      </article>\n    </>\n  );\n};\n","import { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todos } from '../../types/Todos';\n\ntype Style = {\n  todos: Todos[]\n};\n\nexport const TodoList: React.FC<Style> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todos } from './types/Todos';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst findUser = (userId: number) => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nconst todos: Todos[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [newTodos, setNewToDos] = useState(todos);\n  const [valueTitle, setValueTitle] = useState('');\n  const [indexSelectName, setIndexSelectName] = useState(0);\n  const [checkChooseTitle, setCheckChooseTitle] = useState(false);\n  const [checkChooseUser, setCheckChooseUser] = useState(false);\n\n  const maxId = newTodos.reduce((acc, curr) => (acc.id > curr.id ? acc : curr));\n\n  const handleForm = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n\n    if (valueTitle.length === 0) {\n      setCheckChooseTitle(true);\n    }\n\n    if (indexSelectName === 0) {\n      setCheckChooseUser(true);\n    }\n\n    if (valueTitle.length > 0 && indexSelectName > 0) {\n      const newUser = {\n        id: maxId.id + 1,\n        title: valueTitle,\n        completed: false,\n        userId: indexSelectName,\n        user: findUser(indexSelectName),\n      };\n\n      setNewToDos([...newTodos, newUser]);\n\n      setValueTitle('');\n      setIndexSelectName(0);\n    }\n  };\n\n  const handleTitle = (event: {\n    target:\n    { value: React.SetStateAction<string>; };\n  }) => {\n    setValueTitle(event.target.value);\n    setCheckChooseTitle(false);\n  };\n\n  const handleUsers = (event: { target: { value: unknown; }; }) => {\n    setIndexSelectName(Number(event.target.value));\n    setCheckChooseUser(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleForm}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={valueTitle}\n            onChange={handleTitle}\n          />\n          {checkChooseTitle && (\n            <div className=\"notification\">Please enter a title!</div>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            value={indexSelectName}\n            onChange={handleUsers}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n\n          </select>\n          {checkChooseUser && (\n            <div className=\"notification\">Please choose a user!</div>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}